{"ast":null,"code":"var _jsxFileName = \"D:\\\\Smartbrain\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport './App.css';\nimport { tsParticles } from \"tsparticles-engine\";\nimport Clarifai from 'clarifai';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Facerecognition from './components/Facerecognition/Facerecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '65350eabd0d84d1f97ceb299adae8d72'\n});\ntsParticles.load(\"tsparticles\", {\n  fps_limit: 60,\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onclick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onhover: {\n        enable: true,\n        mode: \"attract\",\n        parallax: {\n          enable: false,\n          force: 60,\n          smooth: 10\n        }\n      },\n      resize: true\n    },\n    modes: {\n      push: {\n        quantity: 4\n      },\n      attract: {\n        distance: 200,\n        duration: 0.4,\n        factor: 5\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    line_linked: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      },\n      bounce: false,\n      direction: \"none\",\n      enable: true,\n      out_mode: \"out\",\n      random: false,\n      speed: 2,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        value_area: 800\n      },\n      value: 80\n    },\n    opacity: {\n      anim: {\n        enable: false,\n        opacity_min: 0.1,\n        speed: 1,\n        sync: false\n      },\n      random: false,\n      value: 0.5\n    },\n    shape: {\n      character: {\n        fill: false,\n        font: \"Verdana\",\n        style: \"\",\n        value: \"*\",\n        weight: \"400\"\n      },\n      image: {\n        height: 100,\n        replace_color: true,\n        src: \"images/github.svg\",\n        width: 100\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      stroke: {\n        color: \"#000000\",\n        width: 0\n      },\n      type: \"circle\"\n    },\n    size: {\n      anim: {\n        enable: false,\n        size_min: 0.1,\n        speed: 40,\n        sync: false\n      },\n      random: true,\n      value: 5\n    }\n  },\n  polygon: {\n    draw: {\n      enable: false,\n      lineColor: \"#ffffff\",\n      lineWidth: 0.5\n    },\n    move: {\n      radius: 10\n    },\n    scale: 1,\n    type: \"none\",\n    url: \"\"\n  },\n  retina_detect: true\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      // console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n      // this.state.input=event.target.value this can be used but not recommended\n    };\n    this.onSubmit = () => {\n      // console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict({\n        id: 'face-detection',\n        name: 'Face',\n        version: '6dc7e46bc9124c5c8824be4822abe105',\n        type: 'visual-detector'\n      }, this.state.input).then(response => {\n        console.log('hi', response);\n      }).catch(err => console.log(err));\n    };\n    this.state = {\n      input: '',\n      imageUrl: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#aafaff\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Facerecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Particles","loadFull","tsParticles","Clarifai","ParticlesBg","Navigation","Logo","ImageLinkForm","Rank","Facerecognition","jsxDEV","_jsxDEV","app","App","apiKey","load","fps_limit","interactivity","detect_on","events","onclick","enable","mode","onhover","parallax","force","smooth","resize","modes","push","quantity","attract","distance","duration","factor","particles","color","value","line_linked","opacity","width","move","rotateX","rotateY","bounce","direction","out_mode","random","speed","straight","number","density","value_area","anim","opacity_min","sync","shape","character","fill","font","style","weight","image","height","replace_color","src","polygon","nb_sides","stroke","type","size","size_min","draw","lineColor","lineWidth","radius","scale","url","retina_detect","constructor","onInputChange","event","setState","input","target","onSubmit","imageUrl","state","models","predict","id","name","version","then","response","console","log","catch","err","render","className","children","num","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Smartbrain/smartbrain/src/App.js"],"sourcesContent":["import React,{Component} from 'react';\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport './App.css';\nimport { tsParticles } from \"tsparticles-engine\";\nimport Clarifai from 'clarifai';\nimport ParticlesBg from 'particles-bg';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Facerecognition from './components/Facerecognition/Facerecognition';\n\nconst app = new Clarifai.App({\n apiKey: '65350eabd0d84d1f97ceb299adae8d72'\n});\ntsParticles.load(\"tsparticles\", {\n  fps_limit: 60,\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onclick: { enable: true, mode: \"push\" },\n      onhover: {\n        enable: true,\n        mode: \"attract\",\n        parallax: { enable: false, force: 60, smooth: 10 }\n      },\n      resize: true\n    },\n    modes: {\n      push: { quantity: 4 },\n      attract: { distance: 200, duration: 0.4, factor: 5 }\n    }\n  },\n  particles: {\n    color: { value: \"#ffffff\" },\n    line_linked: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      attract: { enable: false, rotateX: 600, rotateY: 1200 },\n      bounce: false,\n      direction: \"none\",\n      enable: true,\n      out_mode: \"out\",\n      random: false,\n      speed: 2,\n      straight: false\n    },\n    number: { density: { enable: true, value_area: 800 }, value: 80 },\n    opacity: {\n      anim: { enable: false, opacity_min: 0.1, speed: 1, sync: false },\n      random: false,\n      value: 0.5\n    },\n    shape: {\n      character: {\n        fill: false,\n        font: \"Verdana\",\n        style: \"\",\n        value: \"*\",\n        weight: \"400\"\n      },\n      image: {\n        height: 100,\n        replace_color: true,\n        src: \"images/github.svg\",\n        width: 100\n      },\n      polygon: { nb_sides: 5 },\n      stroke: { color: \"#000000\", width: 0 },\n      type: \"circle\"\n    },\n    size: {\n      anim: { enable: false, size_min: 0.1, speed: 40, sync: false },\n      random: true,\n      value: 5\n    }\n  },\n  polygon: {\n    draw: { enable: false, lineColor: \"#ffffff\", lineWidth: 0.5 },\n    move: { radius: 10 },\n    scale: 1,\n    type: \"none\",\n    url: \"\"\n  },\n  retina_detect: true\n});\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input:'',\n      imageUrl:''\n    }\n  }\n  onInputChange = (event) =>{\n    // console.log(event.target.value);\n    this.setState({input:event.target.value});\n    // this.state.input=event.target.value this can be used but not recommended\n  }\n  onSubmit = () =>{\n    // console.log('click');\n      this.setState({imageUrl:this.state.input});\n      app.models\n      .predict(\n        {\n          id: 'face-detection',\n          name: 'Face',\n          version: '6dc7e46bc9124c5c8824be4822abe105',\n          type: 'visual-detector',\n        }, this.state.input)\n      .then(response => {\n        console.log('hi', response)}).catch(err => console.log(err));\n  } \n  render(){\n  return (\n    <div className=\"App\">\n        <ParticlesBg color=\"#aafaff\" num={200} type=\"cobweb\" bg={true}/>\n        <Navigation/>\n        <Logo/>\n        <Rank/>\n        <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n        <Facerecognition imageUrl={this.state.imageUrl}/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}